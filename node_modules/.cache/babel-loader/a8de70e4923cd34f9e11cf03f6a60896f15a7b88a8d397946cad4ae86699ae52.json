{"ast":null,"code":"var _jsxFileName = \"/Users/sslee1210/Documents/GitHub/dodo/src/App.js\";\nimport React, { Component } from \"react\";\nimport TodoListTemplate from \"./components/TodoListTemplate\";\nimport Form from \"./components/Form\";\nimport TodoItemList from \"./components/TodoItemList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 3;\n    // 이미 0,1,2 가 존재하므로 3으로 설정\n    this.state = {\n      input: \"\",\n      todos: [{\n        id: 0,\n        text: \" 리액트 소개\",\n        checked: false\n      }, {\n        id: 1,\n        text: \" 리액트 소개\",\n        checked: true\n      }, {\n        id: 2,\n        text: \" 리액트 소개\",\n        checked: false\n      }]\n    };\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value // input 의 다음 바뀔 값\n      });\n    };\n    this.handleCreate = () => {\n      const {\n        input,\n        todos\n      } = this.state;\n      this.setState({\n        input: \"\",\n        // 인풋 비우고\n        // concat 을 사용하여 배열에 추가\n        todos: todos.concat({\n          id: this.id++,\n          text: input,\n          checked: false\n        })\n      });\n    };\n    this.handleKeyPress = e => {\n      // 눌려진 키가 Enter 면 handleCreate 호출\n      if (e.key === \"Enter\") {\n        this.handleCreate();\n      }\n    };\n    this.handleToggle = id => {\n      const {\n        todos\n      } = this.state;\n      const index = todos.findIndex(todo => todo.id === id);\n      const selected = todos[index];\n      this.setState({\n        todos: [...todos.slice(0, index), {\n          ...selected,\n          checked: !selected.checked\n        }, ...todos.slice(index + 1, todos.length)]\n      });\n    };\n    this.handleRemove = id => {\n      const {\n        todos\n      } = this.state;\n      this.setState({\n        todos: todos.filter(todo => todo.id !== id)\n      });\n    };\n  }\n  render() {\n    const {\n      input,\n      todos\n    } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress\n    } = this;\n    return /*#__PURE__*/_jsxDEV(TodoListTemplate, {\n      form: /*#__PURE__*/_jsxDEV(Form, {\n        value: input,\n        onKeyPress: handleKeyPress,\n        onChange: handleChange,\n        onCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(TodoItemList, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n  render() {\n    const {\n      input,\n      todos\n    } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove\n    } = this;\n    return /*#__PURE__*/_jsxDEV(TodoListTemplate, {\n      form: /*#__PURE__*/_jsxDEV(Form, {\n        value: input,\n        onKeyPress: handleKeyPress,\n        onChange: handleChange,\n        onCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(TodoItemList, {\n        todos: todos,\n        onToggle: handleToggle,\n        onRemove: handleRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","TodoListTemplate","Form","TodoItemList","jsxDEV","_jsxDEV","App","constructor","args","id","state","input","todos","text","checked","handleChange","e","setState","target","value","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","selected","slice","length","handleRemove","filter","render","form","onKeyPress","onChange","onCreate","fileName","_jsxFileName","lineNumber","columnNumber","children","onToggle","onRemove"],"sources":["/Users/sslee1210/Documents/GitHub/dodo/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport TodoListTemplate from \"./components/TodoListTemplate\";\nimport Form from \"./components/Form\";\nimport TodoItemList from \"./components/TodoItemList\";\n\nclass App extends Component {\n  id = 3; // 이미 0,1,2 가 존재하므로 3으로 설정\n\n  state = {\n    input: \"\",\n    todos: [\n      { id: 0, text: \" 리액트 소개\", checked: false },\n      { id: 1, text: \" 리액트 소개\", checked: true },\n      { id: 2, text: \" 리액트 소개\", checked: false },\n    ],\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      input: e.target.value, // input 의 다음 바뀔 값\n    });\n  };\n\n  handleCreate = () => {\n    const { input, todos } = this.state;\n    this.setState({\n      input: \"\", // 인풋 비우고\n      // concat 을 사용하여 배열에 추가\n      todos: todos.concat({\n        id: this.id++,\n        text: input,\n        checked: false,\n      }),\n    });\n  };\n\n  handleKeyPress = (e) => {\n    // 눌려진 키가 Enter 면 handleCreate 호출\n    if (e.key === \"Enter\") {\n      this.handleCreate();\n    }\n  };\n\n  render() {\n    const { input, todos } = this.state;\n    const { handleChange, handleCreate, handleKeyPress } = this;\n\n    return (\n      <TodoListTemplate\n        form={\n          <Form\n            value={input}\n            onKeyPress={handleKeyPress}\n            onChange={handleChange}\n            onCreate={handleCreate}\n          />\n        }\n      >\n        <TodoItemList todos={todos} />\n      </TodoListTemplate>\n    );\n  }\n\n  handleToggle = (id) => {\n    const { todos } = this.state;\n    const index = todos.findIndex((todo) => todo.id === id);\n\n    const selected = todos[index];\n\n    this.setState({\n      todos: [\n        ...todos.slice(0, index),\n        {\n          ...selected,\n          checked: !selected.checked,\n        },\n        ...todos.slice(index + 1, todos.length),\n      ],\n    });\n  };\n  handleRemove = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter((todo) => todo.id !== id),\n    });\n  };\n\n  render() {\n    const { input, todos } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n    } = this;\n\n    return (\n      <TodoListTemplate\n        form={\n          <Form\n            value={input}\n            onKeyPress={handleKeyPress}\n            onChange={handleChange}\n            onCreate={handleCreate}\n          />\n        }\n      >\n        <TodoItemList\n          todos={todos}\n          onToggle={handleToggle}\n          onRemove={handleRemove}\n        />\n      </TodoListTemplate>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}